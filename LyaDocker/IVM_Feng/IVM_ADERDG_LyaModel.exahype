/**
 * This file is part of the ExaHyPE project.
 * Copyright (c) 2016  http://exahype.eu
 * All rights reserved.
 *
 * The project has received funding from the European Union's Horizon 
 * 2020 research and innovation programme under grant agreement
 * No 671698. For copyrights and licensing, please consult the webpage.
 *
 * Released under the BSD 3 Open Source License.
 * For the full license text, see LICENSE.txt
 **/
 
/**

 2D SWE with ADER-DG.

 */
exahype-project  IVM

  peano-kernel-path const = ./Peano
  exahype-path const      = ./ExaHyPE
  output-directory const  = ./ApplicationExamples/IVM_Feng/LyaModel
  architecture const      = noarch
  log-file                = mylogfile.log
  plotter-subdirectory const = Writers

  computational-domain
    dimension const          = 2
    width                    = 0.15, 0.15
    offset                   = -0.0, -0.0
    end-time                 = 0.8e-4
  end computational-domain









  global-optimisation
      fuse-algorithmic-steps          = all
      fuse-algorithmic-steps-rerun-factor   = 0.99
      fuse-algorithmic-steps-diffusion-factor   = 0.99
      spawn-predictor-as-background-thread = off
      spawn-amr-background-threads         = off
      /* 0.0 und 0.8 sind schon mal zwei Faktoren */
      disable-vertex-exchange-in-time-steps = on
      time-step-batch-factor           = 0.0
      disable-metadata-exchange-in-batched-time-steps = off
      double-compression = 0.0
      spawn-double-compression-as-background-thread = off
  end global-optimisation

  solver ADER-DG IVM_ADERDG
    variables const   = e:3,v:2,gint:1
    parameters const  = parame:2
    order const       = 1
    maximum-mesh-size = 0.01
    time-stepping     = globalfixed
    type const        = nonlinear
    terms const       = flux, source
    optimisation const = generic
    language const = C 
    
    # plot vtk::Cartesian::vertices::ascii ConservedQuantitiesWriter
    #   variables const = 6
    #   time            = 0.0
    #   repeat          = 1e-6
    #  output          = ./LyaModel/output/result_Stress
    # end plot

    plot user::defined PointsSol
      variables const = 6
      time            = 0.0
      repeat          = 1e-6
      output          = ./LyaModel/output/errors
    end plot
    
  end solver


end exahype-project
